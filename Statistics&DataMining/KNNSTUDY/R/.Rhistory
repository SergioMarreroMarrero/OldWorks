hist(resultadosEuclidea$k2,col="red",xlab="Accuracy",ylab="Frecuency", main="Distribucion de la ACC ",breaks =barras,freq=FALSE)
hist(resultadosEuclidea$k2,col="red",xlab="Accuracy",ylab="Frecuency", main="Distribucion de la ACC ",breaks =barras,freq=FALSE)
hist(resultadosEuclidea$k2,col="red",xlab="Accuracy",ylab="Frecuency", main="Distribucion de la ACC ",breaks =barras,freq=FALSE)
hist(resultadosEuclidea$k2,col="red",xlab="Accuracy",ylab="Frecuency", main="Distribucion de la ACC ",breaks =barras,freq=FALSE)
lines(density(resultadosEuclidea$k2))
hist(resultadosManhattan$k2,col="blue",xlab="Accuracy",ylab="Frecuency", main="Distribucion de la ACC ",breaks =barras,freq=FALSE)
hist(resultadosManhattan$k2,col="blue",xlab="Accuracy",ylab="Frecuency", main="Distribucion de la ACC ",breaks =barras,freq=FALSE)
layout(matrix(c(1,1,1,2), 2, 2, byrow = TRUE))
hist(resultadosEuclidea$k2,col="red",xlab="Accuracy",ylab="Frecuency", main="Distribucion de la ACC ",breaks =barras,freq=FALSE)
hist(resultadosManhattan$k2,col="blue",xlab="Accuracy",ylab="Frecuency", main="Distribucion de la ACC ",breaks =barras,freq=FALSE)
par(mfrow=c(2,1))
hist(resultadosEuclidea$k2,col="red",xlab="Accuracy",ylab="Frecuency", main="Distribucion de la ACC ",breaks =barras,freq=FALSE)
lines(density(resultadosEuclidea$k2))
hist(resultadosManhattan$k2,col="blue",xlab="Accuracy",ylab="Frecuency", main="Distribucion de la ACC ",breaks =barras,freq=FALSE)
lines(density(resultadosManhattan$k2))
t.test(resultadosEuclidea$k2,resultadosManhattan$k2)
seq(1,10, by = 2)
seq(1,20, by = 2)
ionosphera<-read.csv(file = "/home/sergio/MEGAsync/Trabajosfinales/I+D/PracticaFinal/data/ionosphera.csv",header = TRUE, sep=",")
main<-"/home/sergio/MEGAsync/Trabajosfinales/I+D/PracticaFinal/data/resultados"
for (factorDistancia in c(1,2)) {
results<-data.frame()
ifelse(factorDistancia==1,name<-"Manhattan",name<-"Euclidea")
savepath<-paste(main,name,".csv",sep="")
contvecinos<-0
for (vecinos in seq(1,20, by = 2)) {
contvecinos<-contvecinos+1
seed<-1234
for (replica in seq(1,20, by = 1)){
seed<-seed+10
results[replica,vecinos]<-accuracyKnn(ionosphera,seed,vecinos,factorDistancia)
}
}
#Guardamos resultados
#colnames(results)<-c("k1","k2","k3","k4","k5","k6","k7","k8","k9","k10")
colnames(results)<-c("k1","k3","k5","k7","k9","k11","k13","k15","k17","k19")
write.csv(results,file=savepath) # Guardamos los resultados
remove(results)
}
accuracyKnn <- function(ionosphera,seed,vecinos,p){
H=holdout(ionosphera$Class,ratio=3/5,internal=TRUE,mode="stratified",seed=seed)
trainIonosphera<-ionosphera[H$tr,1:34 ]
classTrainingIonos<-ionosphera[H$tr,35 ]
testIonosphera<-ionosphera[H$ts,1:34 ]
clasificacionIonosphera<-knnVCN(TrnX=trainIonosphera, OrigTrnG=classTrainingIonos,TstX= testIonosphera, K=vecinos, ShowObs = FALSE, method = "minkowski", p=p)
clasiytest<-data.frame(ionosphera[H$ts,35 ],clasificacionIonosphera)
names(clasiytest)<-c("test","clasificados")
accuracy<-sum(clasiytest$test==clasiytest$clas)/nrow(clasiytest)
return(accuracy)
}
main<-"/home/sergio/MEGAsync/Trabajosfinales/I+D/PracticaFinal/data/resultados"
for (factorDistancia in c(1,2)) {
results<-data.frame()
ifelse(factorDistancia==1,name<-"Manhattan",name<-"Euclidea")
savepath<-paste(main,name,".csv",sep="")
contvecinos<-0
for (vecinos in seq(1,20, by = 2)) {
contvecinos<-contvecinos+1
seed<-1234
for (replica in seq(1,20, by = 1)){
seed<-seed+10
results[replica,vecinos]<-accuracyKnn(ionosphera,seed,vecinos,factorDistancia)
}
}
#Guardamos resultados
#colnames(results)<-c("k1","k2","k3","k4","k5","k6","k7","k8","k9","k10")
colnames(results)<-c("k1","k3","k5","k7","k9","k11","k13","k15","k17","k19")
write.csv(results,file=savepath) # Guardamos los resultados
remove(results)
}
main<-"/home/sergio/MEGAsync/Trabajosfinales/I+D/PracticaFinal/data/resultados"
for (factorDistancia in c(1,2)) {
results<-data.frame()
ifelse(factorDistancia==1,name<-"Manhattan",name<-"Euclidea")
savepath<-paste(main,name,".csv",sep="")
contvecinos<-0
for (vecinos in seq(1,20, by = 2)) {
contvecinos<-contvecinos+1
seed<-1234
for (replica in seq(1,20, by = 1)){
seed<-seed+10
results[replica,contvecinos]<-accuracyKnn(ionosphera,seed,vecinos,factorDistancia)
}
}
#Guardamos resultados
#colnames(results)<-c("k1","k2","k3","k4","k5","k6","k7","k8","k9","k10")
colnames(results)<-c("k1","k3","k5","k7","k9","k11","k13","k15","k17","k19")
write.csv(results,file=savepath) # Guardamos los resultados
remove(results)
}
resultadosEuclidea<-read.csv(file = "/home/sergio/MEGAsync/Trabajosfinales/I+D/PracticaFinal/data/resultadosEuclidea.csv",header = TRUE, sep=",")
resultadosManhattan<-read.csv(file = "/home/sergio/MEGAsync/Trabajosfinales/I+D/PracticaFinal/data/resultadosManhattan.csv",header = TRUE, sep=",")
# Eliminamos las dos primeras columnas, ya que es la numeracion
resultadosEuclidea<-resultadosEuclidea[,-1]
resultadosManhattan<-resultadosManhattan[,-1]
resultados<-append(resultadosEuclidea$k1,resultadosEuclidea$k2)
for (i in seq(3,10, by=1)) {
resultados<-append(resultados,resultadosEuclidea[ ,i])
}
#
factorDistancia<-rep("Euclidea",200)
#
factorVecino<-rep(1,20)
for (i in seq(2,10, by=1)) {
factorVecino<-append(factorVecino,rep(i,20))
}
# Manhattan
for (i in seq(1,10, by=1)) {
resultados<-append(resultados,resultadosManhattan[ ,i])
}
#
factorDistancia<-append(factorDistancia,rep("Manhattan",200))
#
factorVecino<-append(factorVecino,factorVecino)
tablaAccuracyknn20rep<-data.frame(resultados,factorVecino,factorDistancia)
savepath<-paste(main,"All.csv",sep="")
write.csv(tablaAccuracyknn20rep,file=savepath) # Guardamos los resultados
resultadosEuclidea<-read.csv(file = "/home/sergio/MEGAsync/Trabajosfinales/I+D/PracticaFinal/data/resultadosEuclidea.csv",header = TRUE, sep=",")
resultadosManhattan<-read.csv(file = "/home/sergio/MEGAsync/Trabajosfinales/I+D/PracticaFinal/data/resultadosManhattan.csv",header = TRUE, sep=",")
resultadosEuclidea<-resultadosEuclidea[,-1]
resultadosManhattan<-resultadosManhattan[,-1]
resultados<-append(resultadosEuclidea$k1,resultadosEuclidea$k2)
for (i in seq(3,10, by=1)) {
resultados<-append(resultados,resultadosEuclidea[ ,i])
}
#
factorDistancia<-rep("Euclidea",200)
#
factorVecino<-rep(1,20)
for (i in seq(2,10, by=1)) {
factorVecino<-append(factorVecino,rep(i,20))
}
# Manhattan
for (i in seq(1,10, by=1)) {
resultados<-append(resultados,resultadosManhattan[ ,i])
}
#
factorDistancia<-append(factorDistancia,rep("Manhattan",200))
#
factorVecino<-append(factorVecino,factorVecino)
tablaAccuracyknn20rep<-data.frame(resultados,factorVecino,factorDistancia)
savepath<-paste(main,"All.csv",sep="")
write.csv(tablaAccuracyknn20rep,file=savepath) # Guardamos los resultados
View(resultadosEuclidea)
View(resultadosManhattan)
View(resultadosEuclidea)
View(resultadosManhattan)
resultados<-append(resultadosEuclidea$k1,resultadosEuclidea$k2)
for (i in seq(3,10, by=1)) {
resultados<-append(resultados,resultadosEuclidea[ ,i])
}
resultados
#
resultados<-append(resultadosEuclidea$k1,resultadosEuclidea$k3)
for (i in seq(3,10, by=1)) {
resultados<-append(resultados,resultadosEuclidea[ ,i])
}
#
factorDistancia<-rep("Euclidea",200)
#
factorVecino<-rep(1,20)
for (i in seq(2,10, by=1)) {
factorVecino<-append(factorVecino,rep(i,20))
}
# Manhattan
for (i in seq(1,10, by=1)) {
resultados<-append(resultados,resultadosManhattan[ ,i])
}
#
factorDistancia<-append(factorDistancia,rep("Manhattan",200))
#
factorVecino<-append(factorVecino,factorVecino)
tablaAccuracyknn20rep<-data.frame(resultados,factorVecino,factorDistancia)
savepath<-paste(main,"All.csv",sep="")
write.csv(tablaAccuracyknn20rep,file=savepath) # Guardamos los resultados
savepath
main<-"/home/sergio/MEGAsync/Trabajosfinales/I+D/PracticaFinal/data/resultados"
resultados<-append(resultadosEuclidea$k1,resultadosEuclidea$k3)
for (i in seq(3,10, by=1)) {
resultados<-append(resultados,resultadosEuclidea[ ,i])
}
#
factorDistancia<-rep("Euclidea",200)
#
factorVecino<-rep(1,20)
for (i in seq(2,10, by=1)) {
factorVecino<-append(factorVecino,rep(i,20))
}
# Manhattan
for (i in seq(1,10, by=1)) {
resultados<-append(resultados,resultadosManhattan[ ,i])
}
#
factorDistancia<-append(factorDistancia,rep("Manhattan",200))
#
factorVecino<-append(factorVecino,factorVecino)
tablaAccuracyknn20rep<-data.frame(resultados,factorVecino,factorDistancia)
savepath<-paste(main,"All.csv",sep="")
write.csv(tablaAccuracyknn20rep,file=savepath) # Guardamos los resultados
tablaAccuracyknn20rep<-read.csv(file = "/home/sergio/MEGAsync/Trabajosfinales/I+D/PracticaFinal/data/resultadosAll.csv",header = TRUE, sep=",")
boxplot(resultados~factorDistancia,data = tablaAccuracyknn20rep,
xlab="Factor distancia",ylab="Accuracy",outline=TRUE,ylim=c(0.7,1),col =c("red","green"))
boxplot(resultados~factorDistancia,data = tablaAccuracyknn20rep,
xlab="Factor distancia",ylab="Accuracy",outline=TRUE,ylim=c(0.7,1),col =c("red","green"))
boxplot(resultados~factorDistancia,data = tablaAccuracyknn20rep,
xlab="Factor distancia",ylab="Accuracy",outline=TRUE,ylim=c(0.7,1),col =c("red","green"))
boxplot(resultados~factorDistancia,data = tablaAccuracyknn20rep,
xlab="Factor distancia",ylab="Accuracy",outline=TRUE,ylim=c(0.7,1),col =c("red","green"))
boxplot(resultados~factorDistancia,data = tablaAccuracyknn20rep,
xlab="Factor distancia",ylab="Accuracy",outline=TRUE,ylim=c(0.7,1),col =c("red","green"))
View(tablaAccuracyknn20rep)
boxplot(resultados~factorDistancia,data = tablaAccuracyknn20rep,
xlab="Factor distancia",ylab="Accuracy",outline=TRUE,ylim=c(0.7,1),col =c("red","green"))
boxplot(resultados~factorDistancia,data = tablaAccuracyknn20rep,
xlab="Factor distancia",ylab="Accuracy",outline=TRUE,ylim=c(0.7,1),col =c("red","green"))
color<-c("blue","red","green","antiquewhite","orange","yellow","darkorchid2","deeppink2","darkslategray1","darkred")
boxplot(resultados~factorVecino,data = tablaAccuracyknn20rep,
xlab="Factor vecinos",ylab="Accuracy",outline=FALSE,ylim=c(0.7,1),
col =color)
col<-c(rep("red",10),rep("green",10))
boxplot(resultados~factorVecino*factorDistancia,data = tablaAccuracyknn20rep,
xlab="Tratamientos",ylab="Accuracy",outline=TRUE,ylim=c(0.7,1),col =col)
jarque.test(resultadosEuclidea$k1)
jarque.test(resultadosEuclidea$k2)
jarque.test(resultadosEuclidea$k3)
jarque.test(resultadosEuclidea$k4)
jarque.test(resultadosEuclidea$k5)
jarque.test(resultadosEuclidea$k6)
jarque.test(resultadosEuclidea$k7)
jarque.test(resultadosEuclidea$k8)
jarque.test(resultadosEuclidea$k9)
jarque.test(resultadosEuclidea$k10)
#Manhatan
jarque.test(resultadosManhattan$k1)
jarque.test(resultadosManhattan$k2)
jarque.test(resultadosManhattan$k3)
jarque.test(resultadosManhattan$k4)
jarque.test(resultadosManhattan$k5)
jarque.test(resultadosManhattan$k6)
jarque.test(resultadosManhattan$k7)
jarque.test(resultadosManhattan$k8)
jarque.test(resultadosManhattan$k9)
jarque.test(resultadosManhattan$k10)
resultadosEuclidea<-read.csv(file = "/home/sergio/MEGAsync/Trabajosfinales/I+D/PracticaFinal/data/resultadosEuclidea.csv",header = TRUE, sep=",")
resultadosManhattan<-read.csv(file = "/home/sergio/MEGAsync/Trabajosfinales/I+D/PracticaFinal/data/resultadosManhattan.csv",header = TRUE, sep=",")
#
# Euclideo
jarque.test(resultadosEuclidea$k1)
jarque.test(resultadosEuclidea$k2)
jarque.test(resultadosEuclidea$k3)
jarque.test(resultadosEuclidea$k4)
jarque.test(resultadosEuclidea$k5)
jarque.test(resultadosEuclidea$k6)
jarque.test(resultadosEuclidea$k7)
jarque.test(resultadosEuclidea$k8)
jarque.test(resultadosEuclidea$k9)
jarque.test(resultadosEuclidea$k10)
#Manhatan
jarque.test(resultadosManhattan$k1)
jarque.test(resultadosManhattan$k2)
jarque.test(resultadosManhattan$k3)
jarque.test(resultadosManhattan$k4)
jarque.test(resultadosManhattan$k5)
jarque.test(resultadosManhattan$k6)
jarque.test(resultadosManhattan$k7)
jarque.test(resultadosManhattan$k8)
jarque.test(resultadosManhattan$k9)
jarque.test(resultadosManhattan$k10)
# Euclideo
jarque.test(resultadosEuclidea$k1)
jarque.test(resultadosEuclidea$k3)
jarque.test(resultadosEuclidea$k5)
jarque.test(resultadosEuclidea$k7)
jarque.test(resultadosEuclidea$k9)
jarque.test(resultadosEuclidea$k11)
jarque.test(resultadosEuclidea$k13)
jarque.test(resultadosEuclidea$k15)
jarque.test(resultadosEuclidea$k17)
jarque.test(resultadosEuclidea$k18)
#Manhatan
jarque.test(resultadosManhattan$k1)
jarque.test(resultadosManhattan$k3)
jarque.test(resultadosManhattan$k5)
jarque.test(resultadosManhattan$k7)
jarque.test(resultadosManhattan$k9)
jarque.test(resultadosManhattan$k11)
jarque.test(resultadosManhattan$k13)
jarque.test(resultadosManhattan$k15)
jarque.test(resultadosManhattan$k17)
jarque.test(resultadosManhattan$k19)
tablaAnova<-aov(resultados ~ factorVecino*factorDistancia,data = tablaAccuracyknn20rep)
sumarytablaAnova<-summary(tablaAnova)
print(xtable(sumarytablaAnova), include.rownames = TRUE)
sumarytablaAnova
nc<-data.frame(resultadosEuclidea$k1,resultadosEuclidea$k2,resultadosEuclidea$k3,resultadosEuclidea$k4,resultadosEuclidea$k5,
resultadosEuclidea$k6, resultadosEuclidea$k7,resultadosEuclidea$k8,resultadosEuclidea$k9,resultadosEuclidea$k10,
resultadosManhattan$k1,resultadosManhattan$k2,resultadosManhattan$k3,resultadosManhattan$k4,resultadosManhattan$k5,
resultadosManhattan$k6, resultadosManhattan$k7,resultadosManhattan$k8,resultadosManhattan$k9,resultadosManhattan$k10)
medias<-tapply(nc,2,mean)
ds<-apply(nc,2,sd)
tmds<-rbind(medias,ds)
nc<-data.frame(resultadosEuclidea$k1,resultadosEuclidea$k3,resultadosEuclidea$k5,resultadosEuclidea$k7,resultadosEuclidea$k9,
resultadosEuclidea$k11, resultadosEuclidea$k13,resultadosEuclidea$k15,resultadosEuclidea$k17,resultadosEuclidea$k19,
resultadosManhattan$k1,resultadosManhattan$k3,resultadosManhattan$k5,resultadosManhattan$k7,resultadosManhattan$k9,
resultadosManhattan$k11, resultadosManhattan$k13,resultadosManhattan$k15,resultadosManhattan$k17,resultadosManhattan$k19)
medias<-tapply(nc,2,mean)
ds<-apply(nc,2,sd)
tmds<-rbind(medias,ds)
nc
medias<-tapply(nc,2,mean)
resultadosEuclidea<-read.csv(file = "/home/sergio/MEGAsync/Trabajosfinales/I+D/PracticaFinal/data/resultadosEuclidea.csv",header = TRUE, sep=",")
resultadosManhattan<-read.csv(file = "/home/sergio/MEGAsync/Trabajosfinales/I+D/PracticaFinal/data/resultadosManhattan.csv",header = TRUE, sep=",")
#
View(resultadosEuclidea)
View(resultadosManhattan)
resultadosEuclidea<-resultadosEuclidea[,-1]
resultadosManhattan<-resultadosManhattan[,-1]
tablaAccuracyknn20rep<-read.csv(file = "/home/sergio/MEGAsync/Trabajosfinales/I+D/PracticaFinal/data/resultadosAll.csv",header = TRUE, sep=",")
View(tablaAccuracyknn20rep)
write.csv(resultadosEuclidea,file="/home/sergio/MEGAsync/Trabajosfinales/I+D/PracticaFinal/data/resultadosEuclidea.csv") # Guardamos los resultados
write.csv(resultadosManhattan,file="/home/sergio/MEGAsync/Trabajosfinales/I+D/PracticaFinal/data/resultadosManhattan.csv") # Guardamos los resultados
resultadosEuclidea<-read.csv(file = "/home/sergio/MEGAsync/Trabajosfinales/I+D/PracticaFinal/data/resultadosEuclidea.csv",header = TRUE, sep=",")
resultadosManhattan<-read.csv(file = "/home/sergio/MEGAsync/Trabajosfinales/I+D/PracticaFinal/data/resultadosManhattan.csv",header = TRUE, sep=",")
#
View(resultadosEuclidea)
View(resultadosManhattan)
resultadosEuclidea<-resultadosEuclidea[,-1]
resultadosManhattan<-resultadosManhattan[,-1]
#
View(resultadosEuclidea)
View(resultadosManhattan)
write.csv(resultadosEuclidea,file="/home/sergio/MEGAsync/Trabajosfinales/I+D/PracticaFinal/data/resultadosEuclidea.csv") # Guardamos los resultados
write.csv(resultadosManhattan,file="/home/sergio/MEGAsync/Trabajosfinales/I+D/PracticaFinal/data/resultadosManhattan.csv") # Guardamos los resultados
resultadosEuclidea<-read.csv(file = "/home/sergio/MEGAsync/Trabajosfinales/I+D/PracticaFinal/data/resultadosEuclidea.csv",header = TRUE, sep=",")
resultadosManhattan<-read.csv(file = "/home/sergio/MEGAsync/Trabajosfinales/I+D/PracticaFinal/data/resultadosManhattan.csv",header = TRUE, sep=",")
View(resultadosEuclidea)
View(resultadosEuclidea)
View(resultadosManhattan)
resultadosEuclidea<-resultadosEuclidea[,-1]
resultadosManhattan<-resultadosManhattan[,-1]
resultadosEuclidea<-resultadosEuclidea[,-1]
resultadosEuclidea<-read.csv(file = "/home/sergio/MEGAsync/Trabajosfinales/I+D/PracticaFinal/data/resultadosEuclidea.csv",header = TRUE, sep=",")
View(resultadosEuclidea)
View(resultadosManhattan)
?write.csv
resultadosEuclidea<-read.csv(file = "/home/sergio/MEGAsync/Trabajosfinales/I+D/PracticaFinal/data/resultadosEuclidea.csv",header = TRUE, sep=",")
resultadosManhattan<-read.csv(file = "/home/sergio/MEGAsync/Trabajosfinales/I+D/PracticaFinal/data/resultadosManhattan.csv",header = TRUE, sep=",")
View(resultadosEuclidea)
View(resultadosManhattan)
resultadosEuclidea<-resultadosEuclidea[,-1]
resultadosManhattan<-resultadosManhattan[,-1]
#
View(resultadosEuclidea)
View(resultadosManhattan)
View(resultadosEuclidea)
write.csv(resultadosEuclidea,file="/home/sergio/MEGAsync/Trabajosfinales/I+D/PracticaFinal/data/resultadosEuclidea.csv",row.names = FALSE) # Guardamos los resultados
write.csv(resultadosManhattan,file="/home/sergio/MEGAsync/Trabajosfinales/I+D/PracticaFinal/data/resultadosManhattan.csv",row.names = FALSE) # Guardamos los resultados
resultadosEuclidea<-read.csv(file = "/home/sergio/MEGAsync/Trabajosfinales/I+D/PracticaFinal/data/resultadosEuclidea.csv",header = TRUE, sep=",")
resultadosManhattan<-read.csv(file = "/home/sergio/MEGAsync/Trabajosfinales/I+D/PracticaFinal/data/resultadosManhattan.csv",header = TRUE, sep=",")
#
View(resultadosEuclidea)
View(resultadosManhattan)
resultados<-append(resultadosEuclidea$k1,resultadosEuclidea$k3)
for (i in seq(3,10, by=1)) {
resultados<-append(resultados,resultadosEuclidea[ ,i])
}
#
factorDistancia<-rep("Euclidea",200)
#
factorVecino<-rep(1,20)
for (i in seq(2,10, by=1)) {
factorVecino<-append(factorVecino,rep(i,20))
}
# Manhattan
for (i in seq(1,10, by=1)) {
resultados<-append(resultados,resultadosManhattan[ ,i])
}
#
factorDistancia<-append(factorDistancia,rep("Manhattan",200))
#
factorVecino<-append(factorVecino,factorVecino)
tablaAccuracyknn20rep<-data.frame(resultados,factorVecino,factorDistancia)
savepath<-paste(main,"All.csv",sep="")
write.csv(tablaAccuracyknn20rep,file=savepath,row.names = FALSE) # Guardamos los resultados
main<-"/home/sergio/MEGAsync/Trabajosfinales/I+D/PracticaFinal/data/resultados"
resultados<-append(resultadosEuclidea$k1,resultadosEuclidea$k3)
for (i in seq(3,10, by=1)) {
resultados<-append(resultados,resultadosEuclidea[ ,i])
}
#
factorDistancia<-rep("Euclidea",200)
#
factorVecino<-rep(1,20)
for (i in seq(2,10, by=1)) {
factorVecino<-append(factorVecino,rep(i,20))
}
# Manhattan
for (i in seq(1,10, by=1)) {
resultados<-append(resultados,resultadosManhattan[ ,i])
}
#
factorDistancia<-append(factorDistancia,rep("Manhattan",200))
#
factorVecino<-append(factorVecino,factorVecino)
tablaAccuracyknn20rep<-data.frame(resultados,factorVecino,factorDistancia)
savepath<-paste(main,"All.csv",sep="")
write.csv(tablaAccuracyknn20rep,file=savepath,row.names = FALSE) # Guardamos los resultados
tablaAccuracyknn20rep<-read.csv(file = "/home/sergio/MEGAsync/Trabajosfinales/I+D/PracticaFinal/data/resultadosAll.csv",header = TRUE, sep=",")
View(tablaAccuracyknn20rep)
boxplot(resultados~factorDistancia,data = tablaAccuracyknn20rep,
xlab="Factor distancia",ylab="Accuracy",outline=TRUE,ylim=c(0.7,1),col =c("red","green"))
color<-c("blue","red","green","antiquewhite","orange","yellow","darkorchid2","deeppink2","darkslategray1","darkred")
boxplot(resultados~factorVecino,data = tablaAccuracyknn20rep,
xlab="Factor vecinos",ylab="Accuracy",outline=FALSE,ylim=c(0.7,1),
col =color)
col<-c(rep("red",10),rep("green",10))
boxplot(resultados~factorVecino*factorDistancia,data = tablaAccuracyknn20rep,
xlab="Tratamientos",ylab="Accuracy",outline=TRUE,ylim=c(0.7,1),col =col)
library("moments")
jarque.test(resultadosEuclidea$k1)
jarque.test(resultadosEuclidea$k3)
jarque.test(resultadosEuclidea$k5)
jarque.test(resultadosEuclidea$k7)
jarque.test(resultadosEuclidea$k9)
jarque.test(resultadosEuclidea$k11)
jarque.test(resultadosEuclidea$k13)
jarque.test(resultadosEuclidea$k15)
jarque.test(resultadosEuclidea$k17)
jarque.test(resultadosEuclidea$k18)
#Manhatan
jarque.test(resultadosManhattan$k1)
jarque.test(resultadosManhattan$k3)
jarque.test(resultadosManhattan$k5)
jarque.test(resultadosManhattan$k7)
jarque.test(resultadosManhattan$k9)
jarque.test(resultadosManhattan$k11)
jarque.test(resultadosManhattan$k13)
jarque.test(resultadosManhattan$k15)
jarque.test(resultadosManhattan$k17)
jarque.test(resultadosManhattan$k19)
tablaAnova<-aov(resultados ~ factorVecino*factorDistancia,data = tablaAccuracyknn20rep)
sumarytablaAnova<-summary(tablaAnova)
sumarytablaAnova
nc<-data.frame(resultadosEuclidea$k1,resultadosEuclidea$k3,resultadosEuclidea$k5,resultadosEuclidea$k7,resultadosEuclidea$k9,
resultadosEuclidea$k11, resultadosEuclidea$k13,resultadosEuclidea$k15,resultadosEuclidea$k17,resultadosEuclidea$k19,
resultadosManhattan$k1,resultadosManhattan$k3,resultadosManhattan$k5,resultadosManhattan$k7,resultadosManhattan$k9,
resultadosManhattan$k11, resultadosManhattan$k13,resultadosManhattan$k15,resultadosManhattan$k17,resultadosManhattan$k19)
medias<-tapply(nc,2,mean)
ds<-apply(nc,2,sd)
tmds<-rbind(medias,ds)
medias<-tapply(nc,2,mean)
medias<-apply(nc,2,mean)
medias
barras=10
par(mfrow=c(2,1))
hist(resultadosEuclidea$k2,col="red",xlab="Accuracy",ylab="Frecuency", main="Distribucion de la ACC ",breaks =barras,freq=FALSE)
lines(density(resultadosEuclidea$k2))
hist(resultadosManhattan$k2,col="blue",xlab="Accuracy",ylab="Frecuency", main="Distribucion de la ACC ",breaks =barras,freq=FALSE)
lines(density(resultadosManhattan$k2))
barras=10
par(mfrow=c(2,1))
hist(resultadosEuclidea$k1col="red",xlab="Accuracy",ylab="Frecuency", main="Distribucion de la ACC ",breaks =barras,freq=FALSE)
lines(density(resultadosEuclidea$k1))
hist(resultadosManhattan$k1,col="blue",xlab="Accuracy",ylab="Frecuency", main="Distribucion de la ACC ",breaks =barras,freq=FALSE)
lines(density(resultadosManhattan$k1))
barras=10
par(mfrow=c(2,1))
hist(resultadosEuclidea$k1col="red",xlab="Accuracy",ylab="Frecuency", main="Distribucion de la ACC ",breaks =barras,freq=FALSE)
lines(density(resultadosEuclidea$k1))
hist(resultadosManhattan$k1,col="blue",xlab="Accuracy",ylab="Frecuency", main="Distribucion de la ACC ",breaks =barras,freq=FALSE)
lines(density(resultadosManhattan$k1))
barras=10
par(mfrow=c(2,1))
hist(resultadosEuclidea$k1col="red",xlab="Accuracy",ylab="Frecuency", main="Distribucion de la ACC ",breaks =barras,freq=FALSE)
lines(density(resultadosEuclidea$k1))
barras=10
par(mfrow=c(2,1))
hist(resultadosEuclidea$k1,col="red",xlab="Accuracy",ylab="Frecuency", main="Distribucion de la ACC ",breaks =barras,freq=FALSE)
lines(density(resultadosEuclidea$k1))
hist(resultadosManhattan$k1,col="blue",xlab="Accuracy",ylab="Frecuency", main="Distribucion de la ACC ",breaks =barras,freq=FALSE)
lines(density(resultadosManhattan$k1))
t.test(resultadosEuclidea$k1,resultadosManhattan$k1)
tablaAccuracyknn20rep<-read.csv(file = "/home/sergio/MEGAsync/Trabajosfinales/I+D/PracticaFinal/data/resultadosAll.csv",header = TRUE, sep=",")
resultadosEuclidea<-read.csv(file = "/home/sergio/MEGAsync/Trabajosfinales/I+D/PracticaFinal/data/resultadosEuclidea.csv",header = TRUE, sep=",")
resultadosManhattan<-read.csv(file = "/home/sergio/MEGAsync/Trabajosfinales/I+D/PracticaFinal/data/resultadosManhattan.csv",header = TRUE, sep=",")
#Cajas y dispersion de distancias
?friedman.test
tablaAccuracyknn20rep<-read.csv(file = "/home/sergio/MEGAsync/Trabajosfinales/I+D/PracticaFinal/data/resultadosAll.csv",header = TRUE, sep=",")
resultadosEuclidea<-read.csv(file = "/home/sergio/MEGAsync/Trabajosfinales/I+D/PracticaFinal/data/resultadosEuclidea.csv",header = TRUE, sep=",")
resultadosManhattan<-read.csv(file = "/home/sergio/MEGAsync/Trabajosfinales/I+D/PracticaFinal/data/resultadosManhattan.csv",header = TRUE, sep=",")
#C
View(tablaAccuracyknn20rep)
?friedman.test
tablaFriedman<-friedman.test(resultados ~ factorVecino*factorDistancia,data = tablaAccuracyknn20rep)
tablaAnova<-aov(resultados ~ factorVecino*factorDistancia,data = tablaAccuracyknn20rep)
resultados ~ factorVecino*factorDistancia,data
resultados ~ factorVecino*factorDistancia
View(tablaAccuracyknn20rep)
View(resultadosManhattan)
View(resultadosEuclidea)
View(resultadosManhattan)
jarque.test(resultadosManhattan$k19)
library("moments")
pnorm
rnorm(50)
resultadosEuclidea$k1
rnorm(20)
ks.test(resultadosEuclidea$k1,rnorm(20))
x<-(resultadosEuclidea$k1-mean(resultadosEuclidea$k1))/sd(resultadosEuclidea$k1)
x
ks.test(x,rnorm(20))
ks.test(x,pnorm)
